[project]
name = "matter-persistance"
description = "Matter persistance library."
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
    { name = "RÃ´mulo Jales", email = "romulo@thisismatter.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "pydantic"
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/Matter-Tech/matter-persistence#readme"
Issues = "https://github.com/Matter-Tech/matter-persistence/issues"
Source = "https://github.com/Matter-Tech/matter-persistence"

[project.optional-dependencies]
database = [
    "sqlalchemy",
    "asyncpg"]
cache = [
    "emcache"
]

[tool.hatch.version]
path = "matter_persistence/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "black",
    "mypy",
    "ruff"
]

[tool.hatch.envs.default.scripts]
test = "pytest  -W error --cov-report=term-missing --cov-config=pyproject.toml --cov=matter_exceptions --cov=tests {args}"
no-cov = "test --no-cov {args}"
typing = "mypy --install-types --non-interactive {args:matter_exceptions tests}"
style = [
    "ruff {args:.}",
    "black --check --diff {args:.}",
]
fmt = [
    "black {args:.}",
    "ruff --fix {args:.}",
    "style",
]
lint = [
    "style",
    "typing",
]

[tool.black]
target-version = ["py310"]
line-length = 120

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "matter_persistence/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
fail_under = 95

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
